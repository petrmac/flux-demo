apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-service
  namespace: node-service
  labels:
    app.kubernetes.io/name: node-service
    app.kubernetes.io/component: backend
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: node-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: node-service
        app.kubernetes.io/component: backend
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
        instrumentation.opentelemetry.io/inject-nodejs: "opentelemetry/opentelemetry-collector"
        instrumentation.opentelemetry.io/container-names: "node-service"
    spec:
      serviceAccountName: node-service
#      imagePullSecrets:
#        - name: ghcr-secret
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: node-service
        image: ghcr.io/petrmac/flux-demo/node-service
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        env:
        - name: PORT
          value: "3000"
        - name: SERVICE_NAME
          value: node-service
        - name: SERVICE_VERSION
          value: "1.0.0"
        - name: ENVIRONMENT
          value: kubernetes
        - name: JAVA_SERVICE_URL
          value: http://demo-service.demo-service.svc.cluster.local:8080
        - name: NODE_ENV
          value: production
        - name: LOG_LEVEL
          value: info
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 3
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL