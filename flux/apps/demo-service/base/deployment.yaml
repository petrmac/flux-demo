apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-service
  namespace: demo-service
  labels:
    app.kubernetes.io/name: demo-service
    app.kubernetes.io/component: backend
  annotations:
    fluxcd.io/automated: "true"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: demo-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: demo-service
        app.kubernetes.io/component: backend
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
        instrumentation.opentelemetry.io/inject-java: "opentelemetry/opentelemetry-collector"
        instrumentation.opentelemetry.io/container-names: "demo-service"
        configmap.reloader.stakater.com/reload: "demo-service-config"
    spec:
      serviceAccountName: demo-service
#      imagePullSecrets:
#      - name: ghcr-secret
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: demo-service
        image: ghcr.io/petrmac/flux-demo/demo-service
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        envFrom:
        - configMapRef:
            name: demo-service-config
        - secretRef:
            name: demo-service-secret
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: SPRING_PROFILES_ACTIVE
          value: kubernetes,default
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: http
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL