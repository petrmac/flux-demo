name: Build and Push Node Service

on:
  push:
    branches: [ main ]
    paths:
      - 'node-service/**'
      - '.github/workflows/node-service.yaml'
  pull_request:
    branches: [ main ]
    paths:
      - 'node-service/**'
      - '.github/workflows/node-service.yaml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/node-service

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: node-service/package-lock.json

    - name: Install dependencies
      working-directory: ./node-service
      run: npm ci

    - name: Run tests
      working-directory: ./node-service
      run: npm test --if-present

    - name: Build application
      working-directory: ./node-service
      run: npm run build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to the Container registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value={{date 'YYYY.MM.DD'}}-{{sha}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./node-service
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate SBOM
      if: github.event_name != 'pull_request'
      uses: anchore/sbom-action@v0
      with:
        path: ./node-service
        format: spdx-json
        output-file: node-service-sbom.spdx.json

    - name: Upload SBOM
      if: github.event_name != 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: node-service-sbom
        path: node-service-sbom.spdx.json